"""
Django settings for myblog project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'yx*tnddvfe_0mfwxxqn_(ye-v)53d=31nji09=yl6skem*oza&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = []
ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog',
    'account',
    'management',
    'captcha',  # 验证码
    'mdeditor',  # markdown后台编辑
    'social_django',  # 第三方登录
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'myblog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 媒体资源
                'django.template.context_processors.media',
                # 全局公共函数
                'blog.views.global_variable',
                # 第三方账号登录
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'myblog.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'myblog',
        'USER': 'root',
        'PASSWORD': '123456',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}
# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# 设置redis作为django的缓存设置
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379',
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PASSWORD": "123456",
        },
    },
}
# 设置redis存储django的session信息
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"
# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

# LANGUAGE_CODE = 'en-us'
#
# TIME_ZONE = 'UTC'
LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/


STATIC_URL = '/static/'
# STATIC_URL = 'https://cdn.cuiliangblog.cn/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),  # 静态文件存放位置
]

# 设置文件上传路径，图片上传、文件上传都会存放在此目录里
MEDIA_URL = '/media/'
# MEDIA_URL = 'https://cdn.cuiliangblog.cn/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# 登录URL
LOGIN_URL = '/account/loginRegister/'

# 验证码配置
CAPTCHA_IMAGE_SIZE = (120, 40)

# 邮件服务器配置
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_SSL = True
EMAIL_HOST = 'smtp.qq.com'
EMAIL_PORT = 465
EMAIL_HOST_USER = '**********'
EMAIL_HOST_PASSWORD = '**********'

# 登录认证后端
AUTHENTICATION_BACKENDS = ('account.views.CustomBackend',  # 允许邮件登录
                           'social_core.backends.github.GithubOAuth2',  # github登录
                           'social_core.backends.weibo.WeiboOAuth2',  # 新浪微博登录
                           'social_core.backends.qq.QQOAuth2',  # qq登录
                           'django.contrib.auth.backends.ModelBackend',  # 指定Django的modelbackend类
                           )
# 第三方登录
SOCIAL_AUTH_URL_NAMESPACE = 'social'
# 第三方Github KEY和SECRET
SOCIAL_AUTH_GITHUB_KEY = '**********'
SOCIAL_AUTH_GITHUB_SECRET = '**********'
# 使用昵称作为用户名
SOCIAL_AUTH_GITHUB_USE_OPENID_AS_USERNAME = True
# 第三方新浪微博KEY和SECRET
SOCIAL_AUTH_WEIBO_KEY = '**********'
SOCIAL_AUTH_WEIBO_SECRET = '**********'
SOCIAL_AUTH_WEIBO_DOMAIN_AS_USERNAME = True
# 第三方QQ KEY和SECRET
SOCIAL_AUTH_QQ_KEY = '**********'
SOCIAL_AUTH_QQ_SECRET = '**********'
# 回调页uri后面不加/
SOCIAL_AUTH_TRAILING_SLASH = False
# 使用昵称作为用户名
SOCIAL_AUTH_QQ_USE_OPENID_AS_USERNAME = True
# 登陆成功后的回调路由
SOCIAL_AUTH_LOGIN_REDIRECT_URL = 'http://127.0.0.1:8000/account/'
# 将所有非SSL请求永久重定向到SSL
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
# 百度统计token
BAIDU_START_DATE = '**********'
BAIDU_USERNAME = '**********'
BAIDU_PASSWORD = '**********'
BAIDU_ID = '**********'
BAIDU_TOKEN = '**********'

# 阿里云token
ALIYUN_KEYId = '**********'
ALIYUN_SECRET = '**********'
ALIYUN_LOCATION = '**********'
ALIYUN_INSTANCE = '**********'

# sitemap文件路径
SITE_MAP_PATH = 'media/sitemap.txt'
